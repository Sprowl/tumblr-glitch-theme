import { Bootstrap } from "./../bootstrap";

import { usingIE, IterateThroughNodelist } from "./../constants";
import { Render } from "./../render";
import { Glitch as cGlitch } from "./../../classes/Glitch";
import { Canvas as cCanvas } from "./../../classes/Canvas";
import { Resize } from "./../events/resize";



export namespace Glitch {
    
/////////////////////////////
/// Constructing.
/////////////////////////////
    /** Returns a newly created `Glitch` instance.
     * @public
     * @param { HTMLElement } element The HTML element, that acts as a wrapper for the soon-to-be canvas ans holder of all event listeners.
     * @param { Canvas } canvas An instance of the `Canvas` class, that can be used as an prepared image. The Glitch will use this image instead of one generated by html2canvas.
     */
    export function constructOne (element:HTMLElement, canvas:cCanvas):cGlitch {
        try {
            return new cGlitch (element, canvas);
        }

        catch (error) {
            console.error("[Glitch]: Error creating new Glitch instance:", error);
        }
    }



/////////////////////////////
/// Regular methods.
/////////////////////////////
    /** Alerts all instances that the window changed.
     * @public
     */
    function alertOnResize ():void {
        cGlitch.instances.forAll(
            glitch => { glitch.onResize(Resize.viewsize.current); }
        );
    }



/////////////////////////////
/// Bootstrapping.
/////////////////////////////
    /** Executing method for this namespace.
     * @private
     */
    function init ():void {
        cGlitch.instances = cGlitch.instances || [];
    }

    /** Adds methods to event listeners.
     * @private
     */
    function register ():void {
        Resize.registerForAlert( alertOnResize );
    }

    /** Executes different kinds of methods.
     * @private
     */
    function various ():void {}

    /** Actually registers the methods.
    * @public
    */
   export function boot ():void {
       Bootstrap.registerInit(init);
       Bootstrap.registerRegister(register);
       Bootstrap.registerVarious(various);
   }
}